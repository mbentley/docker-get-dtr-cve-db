#!/bin/bash

# abort on error
set -e

# check to see if show debug info
if [ "${DEBUG}" = true ] || [ "${DEBUG}" = "1" ]
then
  set +x
fi

# set defaults
LICENSE_FILE="${LICENSE_FILE:-/data/docker_subscription.lic}"
DATABASE_OUTPUT="${DATABASE_OUTPUT:-/data}"
DATABASE_SCHEMA="${DATABASE_SCHEMA:-2}"
CLOBBER_FILE="${CLOBBER_FILE:-false}"

# verify a license file exists
if [ ! -f "${LICENSE_FILE}" ]
then
  echo "Error: ${LICENSE_FILE} not found"
  exit 1
fi

# verify output directory exists
if [ ! -d "${DATABASE_OUTPUT}" ]
then
  echo "Error: ${DATABASE_OUTPUT} is not a directory"
  exit 1
fi

# generate the necessary values
echo "Generating token values to talk to Docker Store..."
GEN_TOKEN_OUTPUT="$(/gen_token "${LICENSE_FILE}")"

# strip out the specific values we need
KEY="$(echo "${GEN_TOKEN_OUTPUT}" | jq -r '.["X-DOCKER-KEY-ID"]')"
TOKEN="$(echo "${GEN_TOKEN_OUTPUT}" | jq -r '.["X-DOCKER-TOKEN"]')"
TIMESTAMP="$(echo "${GEN_TOKEN_OUTPUT}" | jq -r '.["X-DOCKER-TIMESTAMP"]')"
echo -e "done.\\n"

# get a download URL for the CVE database
echo "Getting CVE database URL..."
DB_URL="$(curl -s -X GET \
  -H "X-DOCKER-KEY-ID: ${KEY}" \
  -H "X-DOCKER-TOKEN: ${TOKEN}" \
  -H "X-DOCKER-TIMESTAMP: ${TIMESTAMP}" \
  "https://license.enterprise.docker.com/v1/dss/cve-db-updates/0?schema=${DATABASE_SCHEMA}" \
  | jq -r .urls[])"
echo -e "done.\\n"

# figure out what the file name should be
DATABASE_OUTPUT_FILE="$(echo "${DB_URL}" | awk -F '?' '{print $1}' | awk -F '/' '{print $NF}')"

# make sure the database file begins with `rollup`
if [ "$(echo "${DATABASE_OUTPUT_FILE}" | awk -F '-' '{print $1}')" != "rollup" ] && [ "$(echo "${DATABASE_OUTPUT_FILE}" | awk -F '_' '{print $1}')" != "rollup" ]
then
  echo "Error: DATABASE_OUTPUT_FILE (${DATABASE_OUTPUT_FILE}) wasn't what we expected; please file an issue at https://github.com/mbentley/docker-get-dtr-cve-db/issues"
  exit 1
fi

# make sure the database file ends with `tar`
if [ "$(echo "${DATABASE_OUTPUT_FILE}" | awk -F '.' '{print $NF}')" != "tar" ]
then
  echo "Error: DATABASE_OUTPUT_FILE (${DATABASE_OUTPUT_FILE}) wasn't what we expected; please file an issue at https://github.com/mbentley/docker-get-dtr-cve-db/issues"
  exit 1
fi

# make sure there isn't a file that exists here
if [ -f "${DATABASE_OUTPUT}/${DATABASE_OUTPUT_FILE}" ] && [ "${CLOBBER_FILE}" = "false" ]
then
  echo "Error: File ${DATABASE_OUTPUT}/${DATABASE_OUTPUT_FILE} already exists; remove the file and re-run this script or use CLOBBER_FILE"
  exit 1
fi

# download the latest CVE database
echo "Downloading latest CVE database to '${DATABASE_OUTPUT}/${DATABASE_OUTPUT_FILE}'..."
curl --progress-bar "${DB_URL}" -o "${DATABASE_OUTPUT}/${DATABASE_OUTPUT_FILE}"
echo -e "done.\\n"
