#!/bin/bash

LICENSE_FILE="${LICENSE_FILE:-/data/docker_subscription.lic}"
DATABASE_OUTPUT="${DATABASE_OUTPUT:-/data/db-latest.tar}"
DATABASE_SCHEMA="${DATABASE_SCHEMA:-2}"

if [ ! -f "${LICENSE_FILE}" ]
then
  echo "Error: ${LICENSE_FILE} not found"
  exit 1
fi

echo "Generating token values to talk to Docker Store..."
GEN_TOKEN_OUTPUT="$(/gen_token "${LICENSE_FILE}")"

KEY="$(echo "${GEN_TOKEN_OUTPUT}" | jq -r '.["X-DOCKER-KEY-ID"]')"
TOKEN="$(echo "${GEN_TOKEN_OUTPUT}" | jq -r '.["X-DOCKER-TOKEN"]')"
TIMESTAMP="$(echo "${GEN_TOKEN_OUTPUT}" | jq -r '.["X-DOCKER-TIMESTAMP"]')"

# sleep 5 second to make sure we allow the time to be valid
sleep 5
echo -e "done.\n"

echo "Getting CVE database URL..."
DB_URL="$(curl -s -X GET \
  "https://license.enterprise.docker.com/v1/dss/cve-db-updates/0?schema=${DATABASE_SCHEMA}" \
  -H "X-DOCKER-KEY-ID: ${KEY}" \
  -H "X-DOCKER-TOKEN: ${TOKEN}" \
  -H "X-DOCKER-TIMESTAMP: ${TIMESTAMP}" | jq -r .urls[])"
echo -e "done.\n"

echo "Downloading latest CVE database to '${DATABASE_OUTPUT}'..."
curl --progress-bar "${DB_URL}" -o "${DATABASE_OUTPUT}"
echo -e "done.\n"
